"""Add normalized queue tables for tasks and jobs

Revision ID: 2c58b120a2d6
Revises: 
Create Date: 2025-08-07 14:15:11.791337

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2c58b120a2d6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('queue_jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.String(), nullable=True),
    sa.Column('adapter_name', sa.String(), nullable=True),
    sa.Column('job_type', sa.String(), nullable=True),
    sa.Column('job_name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('task_ids', sa.JSON(), nullable=True),
    sa.Column('total_tasks', sa.Integer(), nullable=True),
    sa.Column('completed_tasks', sa.Integer(), nullable=True),
    sa.Column('failed_tasks', sa.Integer(), nullable=True),
    sa.Column('progress_percentage', sa.Float(), nullable=True),
    sa.Column('job_config', sa.JSON(), nullable=True),
    sa.Column('batch_size', sa.Integer(), nullable=True),
    sa.Column('aggregate_results', sa.JSON(), nullable=True),
    sa.Column('error_summary', sa.Text(), nullable=True),
    sa.Column('total_processing_time_ms', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('session_id', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_queue_jobs_adapter_name'), 'queue_jobs', ['adapter_name'], unique=False)
    op.create_index(op.f('ix_queue_jobs_id'), 'queue_jobs', ['id'], unique=False)
    op.create_index(op.f('ix_queue_jobs_job_id'), 'queue_jobs', ['job_id'], unique=True)
    op.create_index(op.f('ix_queue_jobs_job_type'), 'queue_jobs', ['job_type'], unique=False)
    op.create_index(op.f('ix_queue_jobs_session_id'), 'queue_jobs', ['session_id'], unique=False)
    op.create_index(op.f('ix_queue_jobs_status'), 'queue_jobs', ['status'], unique=False)
    op.create_index(op.f('ix_queue_jobs_user_id'), 'queue_jobs', ['user_id'], unique=False)
    op.create_table('queue_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.String(), nullable=True),
    sa.Column('adapter_name', sa.String(), nullable=True),
    sa.Column('task_type', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_json', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('processing_time_ms', sa.Float(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('job_id', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_queue_tasks_adapter_name'), 'queue_tasks', ['adapter_name'], unique=False)
    op.create_index(op.f('ix_queue_tasks_id'), 'queue_tasks', ['id'], unique=False)
    op.create_index(op.f('ix_queue_tasks_job_id'), 'queue_tasks', ['job_id'], unique=False)
    op.create_index(op.f('ix_queue_tasks_status'), 'queue_tasks', ['status'], unique=False)
    op.create_index(op.f('ix_queue_tasks_task_id'), 'queue_tasks', ['task_id'], unique=True)
    op.create_index(op.f('ix_queue_tasks_task_type'), 'queue_tasks', ['task_type'], unique=False)
    op.create_table('user_interactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('action_type', sa.String(), nullable=True),
    sa.Column('page_path', sa.String(), nullable=True),
    sa.Column('element_type', sa.String(), nullable=True),
    sa.Column('element_id', sa.String(), nullable=True),
    sa.Column('interaction_metadata', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_interactions_action_type'), 'user_interactions', ['action_type'], unique=False)
    op.create_index(op.f('ix_user_interactions_id'), 'user_interactions', ['id'], unique=False)
    op.create_index(op.f('ix_user_interactions_page_path'), 'user_interactions', ['page_path'], unique=False)
    op.create_index(op.f('ix_user_interactions_session_id'), 'user_interactions', ['session_id'], unique=False)
    op.create_index(op.f('ix_user_interactions_user_id'), 'user_interactions', ['user_id'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('page_views', sa.Integer(), nullable=True),
    sa.Column('total_interactions', sa.Integer(), nullable=True),
    sa.Column('session_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_sessions_id'), 'user_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_user_sessions_session_id'), 'user_sessions', ['session_id'], unique=True)
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_session_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_id'), table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_user_interactions_user_id'), table_name='user_interactions')
    op.drop_index(op.f('ix_user_interactions_session_id'), table_name='user_interactions')
    op.drop_index(op.f('ix_user_interactions_page_path'), table_name='user_interactions')
    op.drop_index(op.f('ix_user_interactions_id'), table_name='user_interactions')
    op.drop_index(op.f('ix_user_interactions_action_type'), table_name='user_interactions')
    op.drop_table('user_interactions')
    op.drop_index(op.f('ix_queue_tasks_task_type'), table_name='queue_tasks')
    op.drop_index(op.f('ix_queue_tasks_task_id'), table_name='queue_tasks')
    op.drop_index(op.f('ix_queue_tasks_status'), table_name='queue_tasks')
    op.drop_index(op.f('ix_queue_tasks_job_id'), table_name='queue_tasks')
    op.drop_index(op.f('ix_queue_tasks_id'), table_name='queue_tasks')
    op.drop_index(op.f('ix_queue_tasks_adapter_name'), table_name='queue_tasks')
    op.drop_table('queue_tasks')
    op.drop_index(op.f('ix_queue_jobs_user_id'), table_name='queue_jobs')
    op.drop_index(op.f('ix_queue_jobs_status'), table_name='queue_jobs')
    op.drop_index(op.f('ix_queue_jobs_session_id'), table_name='queue_jobs')
    op.drop_index(op.f('ix_queue_jobs_job_type'), table_name='queue_jobs')
    op.drop_index(op.f('ix_queue_jobs_job_id'), table_name='queue_jobs')
    op.drop_index(op.f('ix_queue_jobs_id'), table_name='queue_jobs')
    op.drop_index(op.f('ix_queue_jobs_adapter_name'), table_name='queue_jobs')
    op.drop_table('queue_jobs')
    # ### end Alembic commands ###